name: Integration Test
on:
  push:
    branches: [katalon]

jobs:
  # postman-test-api:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     packages: write
  #     id-token: write
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3

  #     # INstall Node on the runner
  #     - name: Install Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "18.x"

  #     # Install the newman command line utility and also install the html extra reporter
  #     - name: Install newman
  #       run: |
  #         npm install -g newman
  #         npm install -g newman-reporter-htmlextra
  #         newman run --help

  #       # Make directory to upload the test results
  #     - name: Make Directory for results
  #       run: |
  #         mkdir testResults
  #         pwd
  #         ls -l

  #     - name: Set permissions on the target directory
  #       run: chmod -R 777 testResults/

  #       # Run the POSTMAN collection
  #     - name: Run Postman Tests
  #       # env:
  #       #   POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
  #       run: |
  #         newman run VetApp.postman_collection.json -k -r htmlextra --reporter-htmlextra-export testResults/htmlreport.html --reporter-htmlextra-darkTheme --timeout 50000 > testResults/runreport1.html

  #       # Upload the contents of Test Results directory to workspace
  #     - name: Output the run Details
  #       uses: actions/upload-artifact@v2
  #       with:
  #         #   name: RunReports
  #         name: PostmanApiTestResults
  #         path: testResults

  katalon-test-api:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Katalon Studio Github Action
        uses: katalon-studio/katalon-studio-github-action@v2
        with:
          version: "7.5.5"
          projectPath: "${{ github.workspace }}"
          args: 'katalonc -noSplash -retry=0 -projectPath="./Pet" -testSuiteCollectionPath="Test Suites/Pet Flow" -apiKey= ${{ secrets.KATALON_API_KEY }} --config -webui.autoUpdateDrivers=true'

  # katalon-test-ubuntu:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v3

  #     - name: Set up JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: "adopt"
  #         java-version: "18"

  #     - name: Install Katalon Studio
  #       run: |
  #         wget -O Katalon_Studio_Linux.tar.gz [KATALON_DOWNLOAD_URL]
  #         tar -xzvf Katalon_Studio_Linux.tar.gz

  #     - name: Run Katalon Studio Tests
  #       run: |
  #         ./katalonc -projectPath=./Pet -testSuitePath="Test Suites/Pet Flow" -apiKey=${{ secrets.KATALON_API_KEY }}
